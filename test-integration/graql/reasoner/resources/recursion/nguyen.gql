define

###################################################
####################Schema######################
#################################################

entity2 sub entity,
    has index;
a-entity sub entity2;
b-entity sub entity2;
S sub entity2;

R-rA sub role;
R-rB sub role;
R sub relation, relates R-rA, relates R-rB;
entity2 plays R-rA, plays R-rB;

N-rA sub role;
N-rB sub role;
N sub relation, relates N-rA, relates N-rB;
entity2 plays N-rA, plays N-rB;

Q-rA sub role;
Q-rB sub role;
Q sub relation, relates Q-rA, relates Q-rB;
entity2 plays Q-rA, plays Q-rB;

P-rA sub role;
P-rB sub role;
P sub relation, relates P-rA, relates P-rB;
entity2 plays P-rA, plays P-rB;

index sub attribute, datatype string;

####################################################
##################RULES#############################
####################################################

rule-1
when {
(R-rA: $x, R-rB: $y) isa R;},
then {
(N-rA: $x, N-rB: $y) isa N;};

rule-2
when {
(P-rA: $x, P-rB: $z) isa P;
(N-rA: $z, N-rB: $w) isa N;
(Q-rA: $w, Q-rB: $y) isa Q;},
then {
(N-rA: $x, N-rB: $y) isa N;};

rule-3
when {
(N-rA: $x, N-rB: $y) isa N;
$x has index 'c';},
then {
$y isa S;};
