define

###################################################
####################Schema######################
#################################################

entity2 sub entity,
    has index,
    plays P-from, plays P-to,
    plays Q1-from, plays Q1-to,
    plays Q2-from, plays Q2-to,
    plays R1-from, plays R1-to,
    plays R2-from, plays R2-to;

start sub entity2;
end sub entity2;
a-entity sub entity2;
b-entity sub entity2;

R1-from sub role;
R1-to sub role;
R1 sub relation, relates R1-from, relates R1-to;

R2-from sub role;
R2-to sub role;
R2 sub relation, relates R2-from, relates R2-to;

Q1-from sub role;
Q1-to sub role;
Q1 sub relation, relates Q1-from, relates Q1-to;

Q2-from sub role;
Q2-to sub role;
Q2 sub relation, relates Q2-from, relates Q2-to;

P-from sub role;
P-to sub role;
P sub relation, relates P-from, relates P-to;

index sub attribute, datatype string;

insert

####################################################
##################DATA#############################
####################################################

$c isa entity2, has index "c";
$d isa entity2, has index "d";
$e isa entity2, has index "e";

define

####################################################
##################RULES#############################
####################################################

rule-1
when {
(R1-from: $x, R1-to: $y) isa R1;},
then {
(Q1-from: $x, Q1-to: $y) isa Q1;};

rule-2
when {
(R1-from: $x, R1-to: $z) isa R1;
(Q1-from: $z, Q1-to: $y) isa Q1;},
then {
(Q1-from: $x, Q1-to: $y) isa Q1;};

rule-3
when {
(R2-from: $x, R2-to: $y) isa R2;},
then {
(Q2-from: $x, Q2-to: $y) isa Q2;};

rule-4
when {
(R2-from: $x, R2-to: $z) isa R2;
(Q2-from: $z, Q2-to: $y) isa Q2;},
then {
(Q2-from: $x, Q2-to: $y) isa Q2;};

rule-5
when {
(Q1-from: $x, Q1-to: $y) isa Q1;},
then {
(P-from: $x, P-to: $y) isa P;};
